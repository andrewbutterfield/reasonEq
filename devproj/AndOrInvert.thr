BEGIN THEORY AndOrInvert
DEPS = ["And","Or","Not","Equiv"]
KNOWN = VD (fromList [],fromList [],fromList [])
BEGIN LIST LAWS
END LIST LAWS
BEGIN LIST PROOFS
END LIST PROOFS
BEGIN LIST SIMPLIFIERS
END LIST SIMPLIFIERS
BEGIN LIST DEFFOLD
END LIST DEFFOLD
BEGIN LIST DEFUNFOLD
END LIST DEFUNFOLD
BEGIN LIST CONJECTURES
("lor_land_absorb",ASN (C (TP 1) True (Id "eqv" 0) [C (TP 1) True (Id "or" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),C (TP 1) True (Id "and" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),V (TP 1) (VR (Id "Q" 0,VP,WS))]],V (TP 1) (VR (Id "P" 0,VP,WS))],([],fromList [])))
("land_lnot_lor_absorb",ASN (C (TP 1) True (Id "eqv" 0) [C (TP 1) True (Id "and" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),C (TP 1) True (Id "or" 0) [C (TP 1) True (Id "not" 0) [V (TP 1) (VR (Id "P" 0,VP,WS))],V (TP 1) (VR (Id "Q" 0,VP,WS))]],C (TP 1) True (Id "and" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),V (TP 1) (VR (Id "Q" 0,VP,WS))]],([],fromList [])))
("land_lnot_lor_absorb",ASN (C (TP 1) True (Id "eqv" 0) [C (TP 1) True (Id "or" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),C (TP 1) True (Id "and" 0) [C (TP 1) True (Id "not" 0) [V (TP 1) (VR (Id "P" 0,VP,WS))],V (TP 1) (VR (Id "Q" 0,VP,WS))]],C (TP 1) True (Id "or" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),V (TP 1) (VR (Id "Q" 0,VP,WS))]],([],fromList [])))
("lor_land_distr",ASN (C (TP 1) True (Id "eqv" 0) [C (TP 1) True (Id "or" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),C (TP 1) True (Id "and" 0) [V (TP 1) (VR (Id "Q" 0,VP,WS)),V (TP 1) (VR (Id "R" 0,VP,WS))]],C (TP 1) True (Id "and" 0) [C (TP 1) True (Id "or" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),V (TP 1) (VR (Id "Q" 0,VP,WS))],C (TP 1) True (Id "or" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),V (TP 1) (VR (Id "R" 0,VP,WS))]]],([],fromList [])))
("land_lor_distr",ASN (C (TP 1) True (Id "eqv" 0) [C (TP 1) True (Id "and" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),C (TP 1) True (Id "or" 0) [V (TP 1) (VR (Id "Q" 0,VP,WS)),V (TP 1) (VR (Id "R" 0,VP,WS))]],C (TP 1) True (Id "or" 0) [C (TP 1) True (Id "and" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),V (TP 1) (VR (Id "Q" 0,VP,WS))],C (TP 1) True (Id "and" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),V (TP 1) (VR (Id "R" 0,VP,WS))]]],([],fromList [])))
("deMorgan_land",ASN (C (TP 1) True (Id "eqv" 0) [C (TP 1) True (Id "not" 0) [C (TP 1) True (Id "and" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),V (TP 1) (VR (Id "Q" 0,VP,WS))]],C (TP 1) True (Id "or" 0) [C (TP 1) True (Id "not" 0) [V (TP 1) (VR (Id "P" 0,VP,WS))],C (TP 1) True (Id "not" 0) [V (TP 1) (VR (Id "Q" 0,VP,WS))]]],([],fromList [])))
("deMorgan_lor",ASN (C (TP 1) True (Id "eqv" 0) [C (TP 1) True (Id "not" 0) [C (TP 1) True (Id "or" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),V (TP 1) (VR (Id "Q" 0,VP,WS))]],C (TP 1) True (Id "and" 0) [C (TP 1) True (Id "not" 0) [V (TP 1) (VR (Id "P" 0,VP,WS))],C (TP 1) True (Id "not" 0) [V (TP 1) (VR (Id "Q" 0,VP,WS))]]],([],fromList [])))
("equiv_replace",ASN (C (TP 1) True (Id "eqv" 0) [C (TP 1) True (Id "and" 0) [C (TP 1) True (Id "eqv" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),V (TP 1) (VR (Id "Q" 0,VP,WS))],C (TP 1) True (Id "eqv" 0) [V (TP 1) (VR (Id "R" 0,VP,WS)),V (TP 1) (VR (Id "P" 0,VP,WS))]],C (TP 1) True (Id "and" 0) [C (TP 1) True (Id "eqv" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),V (TP 1) (VR (Id "Q" 0,VP,WS))],C (TP 1) True (Id "eqv" 0) [V (TP 1) (VR (Id "R" 0,VP,WS)),V (TP 1) (VR (Id "Q" 0,VP,WS))]]],([],fromList [])))
("equiv_def",ASN (C (TP 1) True (Id "eqv" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),V (TP 1) (VR (Id "Q" 0,VP,WS)),C (TP 1) True (Id "or" 0) [C (TP 1) True (Id "and" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),V (TP 1) (VR (Id "Q" 0,VP,WS))],C (TP 1) True (Id "and" 0) [C (TP 1) True (Id "not" 0) [V (TP 1) (VR (Id "P" 0,VP,WS))],C (TP 1) True (Id "not" 0) [V (TP 1) (VR (Id "Q" 0,VP,WS))]]]],([],fromList [])))
("test_1",ASN (C (TP 1) True (Id "eqv" 0) [C (TP 1) True (Id "and" 0) [C (TP 1) True (Id "or" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),V (TP 1) (VR (Id "P" 0,VP,WS))],V (TP 1) (VR (Id "Q" 0,VP,WS))],C (TP 1) True (Id "and" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),V (TP 1) (VR (Id "Q" 0,VP,WS))]],([],fromList [])))
("test_2",ASN (C (TP 1) True (Id "eqv" 0) [C (TP 1) True (Id "and" 0) [C (TP 1) True (Id "eqv" 0) [C (TP 1) True (Id "eqv" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),V (TP 1) (VR (Id "Q" 0,VP,WS))],C (TP 1) True (Id "or" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),V (TP 1) (VR (Id "Q" 0,VP,WS))]],C (TP 1) True (Id "and" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),V (TP 1) (VR (Id "R" 0,VP,WS))]],C (TP 1) True (Id "and" 0) [V (TP 1) (VR (Id "P" 0,VP,WS)),C (TP 1) True (Id "and" 0) [V (TP 1) (VR (Id "Q" 0,VP,WS)),V (TP 1) (VR (Id "R" 0,VP,WS))]]],([],fromList [])))
END LIST CONJECTURES
END THEORY AndOrInvert
