Theory Proto


Known 'a {O} : N .
Known a' {O} : N .
Known aterm {O} : B .
Known atermf {O} : ( B -> B ) .
Known gen :: generic
Known inst instanceof gen
Known mol = BEGIN 42 END
Known prodt {O} : ( Prod A B ) .
Known sumt {O} : 
    ( S
      < P1  >
      < P2 B >
      < P3 ( B -> B ) A B >
    ) .
Known 'u {O} : B .
Known 'v {O} : B .
Known x {O} : B .
Known y {O} : B .
Known alist$ :: list
Known aset$ :: set
Known klist0$ = <  >
Known klist1$ = < x >
Known klist2$ = < x,y >
Known set$ = {}
Known alist$' :: list 
Known aset$' :: set 
Known 'list$ = < 'u,'v >
Known 'set$ = {'u,'v}



Conjecture true BEGIN
  true
END

Conjecture false BEGIN
  false
END

Conjecture sc_true BEGIN
  body
END

Conjecture sc_free_a BEGIN
  body
, FREE 'a
END

Conjecture sc_P_disj_a BEGIN
  body
, VREL (DISJ P FROM 'a)
END

Conjecture sc_P_cov_a BEGIN
  body
, VREL (COV P BY 'a)
END

Conjecture sc_P_dyncov_a BEGIN
  body
, VREL (DYNCOV P BY 'a)
END

Conjecture sc_mixed BEGIN
  body
, VREL (DISJ P FROM 'a)
  FREE 'a
END

Conjecture sc_all BEGIN
  body
, VREL (DISJ P FROM 'a) (COV Q BY 'a b$') (DYNCOV Q BY b' 'a$)
  FREE 'a b$'
END

Conjecture v_becomes_e BEGIN
  SUB [('v,'e) ] asg
END

Conjecture univ_closure BEGIN
  CLS universal
  body
END

Conjecture exist_closure BEGIN
  CLS existential
  body
END

Conjecture univ_closure BEGIN
  CLS universal
  QS forall 'a a'
  @
  body
END

Conjecture exist_closure BEGIN
  CLS existential
  QS exists 'a
  @
  csQ (T,T)
END

Conjecture sub_none_none BEGIN
  SUB [ ] body
END

Conjecture sub_one_none BEGIN
  SUB [('a,body) ] body
END

Conjecture sub_none_one BEGIN
  SUB [ (a$',a$'d)] body
END

Conjecture sub_one_none BEGIN
  SUB [('a,body) (a$',a$'d)] body
END

Conjecture sub_two_two BEGIN
  SUB [('a,42) ('b,ns2 (T,T)) (a$',a$'d) ('b$,b$')] body
END

Conjecture forall_zero BEGIN
  body
END

Conjecture exists_one BEGIN
  QS exists 'a
  @
csQ (T,T)
END

Conjecture forall_two BEGIN
  QS forall 'a a'
  @
body
END

Conjecture exists_three BEGIN
  QS exists 'a 'a$ a'
  @
body
END

Conjecture forall_four BEGIN
  QS forall 'a 'a$ a$' a'
  @
body
END

Conjecture lambda_zero BEGIN
  body
END

Conjecture lambda_one BEGIN
  QL lambda 'a
  @ csQ (T,T)
END

Conjecture lambda_two BEGIN
  QL lambda 'a a'
  @ body
END

Conjecture lambda_three BEGIN
  QL lambda 'a a' 'a$
  @ body
END

Conjecture lambda_four BEGIN
  QL lambda 'a a' 'a$ a$'
  @ body
END

Conjecture fortytwo BEGIN
  42
END

Conjecture neg99 BEGIN
  -99
END

Conjecture expr_static BEGIN
  Ve
END

Conjecture expr_before BEGIN
  'Ve
END

Conjecture expr_after BEGIN
  Ve'
END

Conjecture expr_during BEGIN
  Ve'd
END

Conjecture pred_static BEGIN
  Vp
END

Conjecture pred_before BEGIN
  'Vp
END

Conjecture pred_after BEGIN
  Vp'
END

Conjecture pred_during BEGIN
  Vp'd
END

Conjecture cons_S_zero BEGIN
  cs0 ()
END

Conjecture cons_S_one BEGIN
  cs1 (T)
END

Conjecture cons_S_two BEGIN
  cs2 (T,T)
END

Conjecture cons_N_zero BEGIN
  ns0 ()
END

Conjecture cons_N_two BEGIN
  ns2 (T,T)
END

Conjecture cons_N_two BEGIN
  ns2 (T,T)
END

Conjecture cons_nesting BEGIN
  nest (sub1 (),sub2 (T),sub3 ())
END
