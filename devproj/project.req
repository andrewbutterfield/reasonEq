BEGIN REQSTATE
BEGIN THEORIES
THNAMES = ["And","AndOrInvert","Arithmetic","Equality","Equiv","Exists","ForAll","Implies","LTL","Lists","Not","Or","Sets","UClose","UTCP","UTPBase"]
SDAG = [[("UTCP",["UTPBase","Sets","UClose","Exists","ForAll","Equality","Implies","AndOrInvert","And","Or","Not","Equiv"])],[("UTPBase",["UClose","Exists","ForAll","Equality","Implies","AndOrInvert","And","Or","Not","Equiv"])],[("Lists",["Implies","Equiv","Equality","ForAll","Arithmetic","Sets"]),("LTL",["Equality","Exists","ForAll","Implies","AndOrInvert","And","Or","Not","Equiv"]),("UClose",["Exists","ForAll","Equality","Implies","AndOrInvert","And","Or","Not","Equiv"])],[("Sets",["Implies","Equiv","Equality","ForAll","Arithmetic"]),("Exists",["ForAll","Equality","Implies","AndOrInvert","And","Or","Not","Equiv"])],[("Arithmetic",["Implies","Equiv","Equality"]),("ForAll",["Equality","Implies","AndOrInvert","And","Or","Not","Equiv"])],[("Equality",["Implies","Equiv"])],[("Implies",["AndOrInvert","And","Or","Not","Equiv"])],[("AndOrInvert",["And","Or","Not","Equiv"])],[("And",["Or","Not","Equiv"])],[("Or",["Not","Equiv"])],[("Not",["Equiv"])],[("Equiv",[])]]
END THEORIES
CURRTHEORY = UTPBase
BEGIN LIVE-PROOFS
BEGIN MAP LIVE-PROOFS
("UTPBase",":=_seq_same")
BEGIN LIVE-PROOF
TH-NAME: UTPBase
CJ-NAME: :=_seq_same
CONJ = ASN (C (TF TB (TG (Id "B" 0))) True (Id "eqv" 0) [C (TF TB (TG (Id "B" 0))) False (Id ";" 0) [S (TF TB (TG (Id "B" 0))) (V (TF TB (TG (Id "B" 0))) (VR (Id ":=" 0,VP,WT))) (SN (fromList [(VR (Id "x" 0,VO,WB),V T (VR (Id "e" 0,VE,WB)))]) (fromList [])),S (TF TB (TG (Id "B" 0))) (V (TF TB (TG (Id "B" 0))) (VR (Id ":=" 0,VP,WT))) (SN (fromList [(VR (Id "x" 0,VO,WB),V T (VR (Id "f" 0,VE,WB)))]) (fromList []))],S (TF TB (TG (Id "B" 0))) (V (TF TB (TG (Id "B" 0))) (VR (Id ":=" 0,VP,WT))) (SN (fromList [(VR (Id "x" 0,VO,WB),S T (V T (VR (Id "f" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WB),V T (VR (Id "e" 0,VE,WB)))]) (fromList [])))]) (fromList []))],([VSC (GV (VR (Id "e" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "f" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "x" 0,VO,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))]))],fromList []))
SIDE = ([VSC (GV (VR (Id "e" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "f" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "x" 0,VO,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))]))],fromList [])
STRAT red-L2R
BEGIN SEQZIP
TERMZIP = (S T (V T (VR (Id "f" 0,VE,WD "1"))) (SN (fromList [(VR (Id "x" 0,VO,WD "1"),V T (VR (Id "e" 0,VE,WB)))]) (fromList [(LV (VR (Id "O" 0,VO,WD "1"),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[]))])),[Cons' (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V T (VR (Id "x" 0,VO,WA))] [],Cons' (TF TB (TG (Id "B" 0))) True (Id "and" 0) [] [S (TF TB (TG (Id "B" 0))) (I (TF TB (TG (Id "B" 0))) True (Id "and" 0) True (Id "=" 0) [LV (VR (Id "O" 0,VO,WA),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WD "1"),[Id "x" 0],[])]) (SN (fromList [(VR (Id "x" 0,VO,WD "1"),V T (VR (Id "e" 0,VE,WB)))]) (fromList [(LV (VR (Id "O" 0,VO,WD "1"),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[]))]))]])
BEGIN SEQUENT'
SIDECOND = ([VSC (GV (VR (Id "e" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "f" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "x" 0,VO,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))]))],fromList [])
LAWS' = CLaws' {hyp0 = Theory {thName = "H.:=_seq_same", thDeps = [], known = VD ("",fromList [],fromList [],fromList []), laws = [], proofs = [], auto = AutoLaws {simps = [], folds = [], unfolds = []}, conjs = []}, whichC = Lft, otherC = S (TF TB (TG (Id "B" 0))) (V (TF TB (TG (Id "B" 0))) (VR (Id ":=" 0,VP,WT))) (SN (fromList [(VR (Id "x" 0,VO,WB),S T (V T (VR (Id "f" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WB),V T (VR (Id "e" 0,VE,WB)))]) (fromList [])))]) (fromList []))}
END SEQUENT'
END SEQZIP
FPATH: [1,2]
BEGIN LIST STEPS
(Substitute [1,1],ASN (C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [S T (V T (VR (Id "x" 0,VO,WA))) (SN (fromList [(VR (Id "x" 0,VO,WD "1"),V T (VR (Id "e" 0,VE,WB)))]) (fromList [(LV (VR (Id "O" 0,VO,WD "1"),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[]))])),S T (V T (VR (Id "f" 0,VE,WD "1"))) (SN (fromList [(VR (Id "x" 0,VO,WD "1"),V T (VR (Id "e" 0,VE,WB)))]) (fromList [(LV (VR (Id "O" 0,VO,WD "1"),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[]))]))],S (TF TB (TG (Id "B" 0))) (I (TF TB (TG (Id "B" 0))) True (Id "and" 0) True (Id "=" 0) [LV (VR (Id "O" 0,VO,WA),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WD "1"),[Id "x" 0],[])]) (SN (fromList [(VR (Id "x" 0,VO,WD "1"),V T (VR (Id "e" 0,VE,WB)))]) (fromList [(LV (VR (Id "O" 0,VO,WD "1"),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[]))]))],([VSC (GV (VR (Id "e" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "f" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "x" 0,VO,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))]))],fromList [])))
(UseLaw (ByMatch MEL) "=_subst" (BD (fromList [((Id "=" 0,VO),BV (VR (Id "=" 0,VO,WS))),((Id "e" 0,VO),BV (VR (Id "x" 0,VO,WA))),((Id "f" 0,VO),BV (VR (Id "f" 0,VE,WD "1")))],fromList [],fromList [((Id "e" 0,VO,[],[]),BX [Right (V T (VR (Id "e" 0,VE,WB))),Left (LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[]))]),((Id "x" 0,VO,[],[]),BL [GV (VR (Id "x" 0,VO,WD "1")),GL (LV (VR (Id "O" 0,VO,WD "1"),[Id "x" 0],[]))])])) [1],ASN (C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [S (TF TB (TG (Id "B" 0))) (C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V T (VR (Id "x" 0,VO,WA)),V T (VR (Id "f" 0,VE,WD "1"))]) (SN (fromList [(VR (Id "x" 0,VO,WD "1"),V T (VR (Id "e" 0,VE,WB)))]) (fromList [(LV (VR (Id "O" 0,VO,WD "1"),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[]))])),S (TF TB (TG (Id "B" 0))) (I (TF TB (TG (Id "B" 0))) True (Id "and" 0) True (Id "=" 0) [LV (VR (Id "O" 0,VO,WA),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WD "1"),[Id "x" 0],[])]) (SN (fromList [(VR (Id "x" 0,VO,WD "1"),V T (VR (Id "e" 0,VE,WB)))]) (fromList [(LV (VR (Id "O" 0,VO,WD "1"),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[]))]))],([VSC (GV (VR (Id "e" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "f" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "x" 0,VO,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))]))],fromList [])))
(UseLaw (ByMatch MEL) "and_subst" (BD (fromList [((Id "P" 0,VP),BT (C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V T (VR (Id "x" 0,VO,WA)),V T (VR (Id "f" 0,VE,WD "1"))])),((Id "Q" 0,VP),BT (I (TF TB (TG (Id "B" 0))) True (Id "and" 0) True (Id "=" 0) [LV (VR (Id "O" 0,VO,WA),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WD "1"),[Id "x" 0],[])])),((Id "and" 0,VO),BV (VR (Id "and" 0,VO,WS)))],fromList [],fromList [((Id "e" 0,VE,[],[]),BX [Right (V T (VR (Id "e" 0,VE,WB))),Left (LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[]))]),((Id "x" 0,VO,[],[]),BL [GV (VR (Id "x" 0,VO,WD "1")),GL (LV (VR (Id "O" 0,VO,WD "1"),[Id "x" 0],[]))])])) [],ASN (S (TF TB (TG (Id "B" 0))) (C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V T (VR (Id "x" 0,VO,WA)),V T (VR (Id "f" 0,VE,WD "1"))],I (TF TB (TG (Id "B" 0))) True (Id "and" 0) True (Id "=" 0) [LV (VR (Id "O" 0,VO,WA),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WD "1"),[Id "x" 0],[])]]) (SN (fromList [(VR (Id "x" 0,VO,WD "1"),V T (VR (Id "e" 0,VE,WB)))]) (fromList [(LV (VR (Id "O" 0,VO,WD "1"),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[]))])),([VSC (GV (VR (Id "e" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "f" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "x" 0,VO,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))]))],fromList [])))
(UseLaw (ByMatch MEL) "exists_one_point" (BD (fromList [((Id "P" 0,VP),BT (C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V T (VR (Id "x" 0,VO,WA)),V T (VR (Id "f" 0,VE,WD "1"))],I (TF TB (TG (Id "B" 0))) True (Id "and" 0) True (Id "=" 0) [LV (VR (Id "O" 0,VO,WA),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WD "1"),[Id "x" 0],[])]])),((Id "and" 0,VO),BV (VR (Id "and" 0,VO,WS)))],fromList [],fromList [((Id "e" 0,VE,[],[]),BX [Right (V T (VR (Id "e" 0,VE,WB))),Left (LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[]))]),((Id "x" 0,VO,[],[]),BX [Right (V T (VR (Id "x" 0,VO,WD "1"))),Left (LV (VR (Id "O" 0,VO,WD "1"),[Id "x" 0],[]))]),((Id "y" 0,VO,[],[]),BS (fromList []))])) [],ASN (B (TF TB (TG (Id "B" 0))) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))]) (C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V T (VR (Id "x" 0,VO,WD "1")),V T (VR (Id "e" 0,VE,WB))],I (TF TB (TG (Id "B" 0))) True (Id "and" 0) True (Id "=" 0) [LV (VR (Id "O" 0,VO,WD "1"),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[])]],C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V T (VR (Id "x" 0,VO,WA)),V T (VR (Id "f" 0,VE,WD "1"))],I (TF TB (TG (Id "B" 0))) True (Id "and" 0) True (Id "=" 0) [LV (VR (Id "O" 0,VO,WA),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WD "1"),[Id "x" 0],[])]]]),([VSC (GV (VR (Id "e" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "f" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "x" 0,VO,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))]))],fromList [])))
(Substitute [1,2],ASN (B (TF TB (TG (Id "B" 0))) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))]) (C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V T (VR (Id "x" 0,VO,WD "1")),V T (VR (Id "e" 0,VE,WB))],I (TF TB (TG (Id "B" 0))) True (Id "and" 0) True (Id "=" 0) [LV (VR (Id "O" 0,VO,WD "1"),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[])]],S (TF TB (TG (Id "B" 0))) (C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V T (VR (Id "x" 0,VO,WA)),V T (VR (Id "f" 0,VE,WB))],I (TF TB (TG (Id "B" 0))) True (Id "and" 0) True (Id "=" 0) [LV (VR (Id "O" 0,VO,WA),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[])]]) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))]))]),([VSC (GV (VR (Id "e" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "f" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "x" 0,VO,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))]))],fromList [])))
(Substitute [1,1],ASN (B (TF TB (TG (Id "B" 0))) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))]) (C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [S (TF TB (TG (Id "B" 0))) (C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V T (VR (Id "x" 0,VO,WA)),V T (VR (Id "e" 0,VE,WB))],I (TF TB (TG (Id "B" 0))) True (Id "and" 0) True (Id "=" 0) [LV (VR (Id "O" 0,VO,WA),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[])]]) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))])),S (TF TB (TG (Id "B" 0))) (C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V T (VR (Id "x" 0,VO,WA)),V T (VR (Id "f" 0,VE,WB))],I (TF TB (TG (Id "B" 0))) True (Id "and" 0) True (Id "=" 0) [LV (VR (Id "O" 0,VO,WA),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[])]]) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))]))]),([VSC (GV (VR (Id "e" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "f" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "x" 0,VO,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))]))],fromList [])))
(UseLaw (ByMatch MEL) ";_def" (BD (fromList [((Id ";" 0,VO),BV (VR (Id ";" 0,VO,WS))),((Id "P" 0,VP),BT (C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V T (VR (Id "x" 0,VO,WA)),V T (VR (Id "e" 0,VE,WB))],I (TF TB (TG (Id "B" 0))) True (Id "and" 0) True (Id "=" 0) [LV (VR (Id "O" 0,VO,WA),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[])]])),((Id "Q" 0,VP),BT (C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V T (VR (Id "x" 0,VO,WA)),V T (VR (Id "f" 0,VE,WB))],I (TF TB (TG (Id "B" 0))) True (Id "and" 0) True (Id "=" 0) [LV (VR (Id "O" 0,VO,WA),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[])]]))],fromList [("0","1")],fromList [((Id "O" 0,VO,[],[]),BL [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])])) [],ASN (C (TF TB (TG (Id "B" 0))) False (Id ";" 0) [C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V T (VR (Id "x" 0,VO,WA)),V T (VR (Id "e" 0,VE,WB))],I (TF TB (TG (Id "B" 0))) True (Id "and" 0) True (Id "=" 0) [LV (VR (Id "O" 0,VO,WA),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[])]],C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V T (VR (Id "x" 0,VO,WA)),V T (VR (Id "f" 0,VE,WB))],I (TF TB (TG (Id "B" 0))) True (Id "and" 0) True (Id "=" 0) [LV (VR (Id "O" 0,VO,WA),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[])]]],([VSC (GV (VR (Id "e" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "f" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "x" 0,VO,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))]))],fromList [])))
(UseLaw (ByMatch MEL) ":=_def" (BD (fromList [((Id ":=" 0,VP),BI (Id ":=" 0))],fromList [],fromList [((Id "O" 0,VO,[],[Id "x" 0]),BL [GL (LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[]))]),((Id "e" 0,VE,[],[]),BX [Right (V T (VR (Id "f" 0,VE,WB)))]),((Id "x" 0,VO,[],[]),BL [GV (VR (Id "x" 0,VO,WB))])])) [2],ASN (C (TF TB (TG (Id "B" 0))) False (Id ";" 0) [C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V T (VR (Id "x" 0,VO,WA)),V T (VR (Id "e" 0,VE,WB))],I (TF TB (TG (Id "B" 0))) True (Id "and" 0) True (Id "=" 0) [LV (VR (Id "O" 0,VO,WA),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[])]],S (TF TB (TG (Id "B" 0))) (V (TF TB (TG (Id "B" 0))) (VR (Id ":=" 0,VP,WT))) (SN (fromList [(VR (Id "x" 0,VO,WB),V T (VR (Id "f" 0,VE,WB)))]) (fromList []))],([VSC (GV (VR (Id "e" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "f" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "x" 0,VO,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))]))],fromList [])))
(UseLaw (ByMatch MEL) ":=_def" (BD (fromList [((Id ":=" 0,VP),BI (Id ":=" 0))],fromList [],fromList [((Id "O" 0,VO,[],[Id "x" 0]),BL [GL (LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[]))]),((Id "e" 0,VE,[],[]),BX [Right (V T (VR (Id "e" 0,VE,WB)))]),((Id "x" 0,VO,[],[]),BL [GV (VR (Id "x" 0,VO,WB))])])) [1],ASN (C (TF TB (TG (Id "B" 0))) False (Id ";" 0) [S (TF TB (TG (Id "B" 0))) (V (TF TB (TG (Id "B" 0))) (VR (Id ":=" 0,VP,WT))) (SN (fromList [(VR (Id "x" 0,VO,WB),V T (VR (Id "e" 0,VE,WB)))]) (fromList [])),S (TF TB (TG (Id "B" 0))) (V (TF TB (TG (Id "B" 0))) (VR (Id ":=" 0,VP,WT))) (SN (fromList [(VR (Id "x" 0,VO,WB),V T (VR (Id "f" 0,VE,WB)))]) (fromList []))],([VSC (GV (VR (Id "e" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "f" 0,VE,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])),VSC (GV (VR (Id "x" 0,VO,WB))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[]))]))],fromList [])))
END LIST STEPS
END LIVE-PROOF
END MAP LIVE-PROOFS
END LIVE-PROOFS
END REQSTATE
