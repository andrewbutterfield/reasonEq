debug

@try.scP:
([SD NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])],fromList [])
@try.bind:
BD (fromList [((Id "P" 0,VP),BT (S P (V P (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))]))))],fromList [],fromList [((Id "e" 0,VE,[],[]),BX [Left (LV (VR (Id "O" 0,VO,WA),[],[]))]),((Id "x" 0,VO,[],[]),BL [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))])])
@dFV.t:
S P (V P (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))]))
@fV(Sub).sub:
SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))])
@fV(Sub).tm:
V P (VR (Id "R" 0,VP,WS))
@fV(Sub).visfvs:
(fromList [],[])
@fV(Sub).missed:
(fromList [],[(GV (VR (Id "R" 0,VP,WS)),fromList [GL (LV (VR (Id "O" 0,VO,WA),[],[]))])])
@fV(Sub):
(fromList [],[(GV (VR (Id "R" 0,VP,WS)),fromList [GL (LV (VR (Id "O" 0,VO,WA),[],[]))])])
@dFV.fv(t):
(fromList [],[(GV (VR (Id "R" 0,VP,WS)),fromList [GL (LV (VR (Id "O" 0,VO,WA),[],[]))])])
@try.scC:
([SS NU (GV (VR (Id "II" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "R" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])],fromList [])
@try.scP':
([],fromList [])
Match against `non_subst'[1]
Binding: { P ⟼ R[O$_1/O$'], e$ ⟼ ⟨O$'⟩, x$ ⟼ ⟨O$_1⟩ }
Instantiated Law = (R[O$_1/O$'])[O$'/O$_1]  ≡  R[O$_1/O$']
Instantiated Law S.C. = ⊤
Goal S.C. = O$,O$'⊇II, O$,O$'⊇R
@try.scP'':
([],fromList [])
Discharged Law S.C. = ⊤
