BEGIN REQSTATE
BEGIN REQSET
MMD = 20
MHT = False
MHQ = True
MHF = False
END REQSET
BEGIN THEORIES
THNAMES = ["And","AndOrInvert","Equality","Equiv","Exists","ForAll","Implies","Not","Or","UClose","UTPBase","XYZ"]
SDAG = [[("XYZ",["UClose","Exists","ForAll","Equality","Implies","AndOrInvert","And","Or","Not","Equiv"]),("UTPBase",["UClose","Exists","ForAll","Equality","Implies","AndOrInvert","And","Or","Not","Equiv"])],[("UClose",["Exists","ForAll","Equality","Implies","AndOrInvert","And","Or","Not","Equiv"])],[("Exists",["ForAll","Equality","Implies","AndOrInvert","And","Or","Not","Equiv"])],[("ForAll",["Equality","Implies","AndOrInvert","And","Or","Not","Equiv"])],[("Equality",["Implies","Equiv"])],[("Implies",["AndOrInvert","And","Or","Not","Equiv"])],[("AndOrInvert",["And","Or","Not","Equiv"])],[("And",["Or","Not","Equiv"])],[("Or",["Not","Equiv"])],[("Not",["Equiv"])],[("Equiv",[])]]
END THEORIES
CURRTHEORY = XYZ
BEGIN LIVE-PROOFS
BEGIN MAP LIVE-PROOFS
("UTPBase",";_assoc")
BEGIN LIVE-PROOF
TH-NAME: UTPBase
CJ-NAME: ;_assoc
CONJ = ASN (C P True (Id "eqv" 0) [C P False (Id ";" 0) [V P (VR (Id "P" 0,VP,WS)),C P False (Id ";" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],C P False (Id ";" 0) [C P False (Id ";" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],V P (VR (Id "R" 0,VP,WS))]],([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "Q" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "R" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])],fromList []))
SIDE = ([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "Q" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "R" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])],fromList [])
STRAT red-bth
BEGIN SEQZIP
TERMZIP = (B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "3"),[],[]))]) (B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "4"),[],[]))]) (C P True (Id "and" 0) [C P True (Id "and" 0) [S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[]))])),S P (V P (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[])),(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))]))],S P (V P (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))]))])),[])
BEGIN SEQUENT'
SIDECOND = ([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "Q" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "R" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])],fromList [])
LAWS' = CLaws' {hyp0 = Theory {thName = "H.;_assoc", thDeps = [], known = VD (fromList [],fromList [],fromList []), laws = [], proofs = [], auto = AutoLaws {simps = [], folds = [], unfolds = []}, conjs = []}, whichC = Rght, otherC = B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "2"),[],[]))]) (B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))]) (C P True (Id "and" 0) [S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))])),C P True (Id "and" 0) [S P (V P (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[])),(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))])),S P (V P (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))]))]]))}
END SEQUENT'
END SEQZIP
FPATH: []
BEGIN LIST STEPS
(UseLaw (ByMatch MEL) "land_symm" (BD (fromList [((Id "P" 0,VP),BT (S P (V P (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))])))),((Id "Q" 0,VP),BT (C P True (Id "and" 0) [S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[]))])),S P (V P (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[])),(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))]))]))],fromList [],fromList [])) [1,1],ASN (B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "3"),[],[]))]) (B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "4"),[],[]))]) (C P True (Id "and" 0) [S P (V P (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))])),C P True (Id "and" 0) [S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[]))])),S P (V P (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[])),(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))]))]])),([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "Q" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "R" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])],fromList [])))
(UseLaw (ByMatch MEL) "land_exists_scope" (BD (fromList [((Id "P" 0,VP),BT (S P (V P (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))])))),((Id "Q" 0,VP),BT (C P True (Id "and" 0) [S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[]))])),S P (V P (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[])),(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))]))]))],fromList [],fromList [((Id "x" 0,VO,[],[]),BS (fromList [GL (LV (VR (Id "O" 0,VO,WD "4"),[],[]))])),((Id "y" 0,VO,[],[]),BS (fromList []))])) [1],ASN (B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "3"),[],[]))]) (C P True (Id "and" 0) [S P (V P (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))])),B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "4"),[],[]))]) (C P True (Id "and" 0) [S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[]))])),S P (V P (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[])),(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))]))])]),([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "Q" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "R" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])],fromList [])))
(UseLaw (ByMatch MEL) "land_symm" (BD (fromList [((Id "P" 0,VP),BT (B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "4"),[],[]))]) (C P True (Id "and" 0) [S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[]))])),S P (V P (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[])),(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))]))]))),((Id "Q" 0,VP),BT (S P (V P (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))]))))],fromList [],fromList [])) [1],ASN (B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "3"),[],[]))]) (C P True (Id "and" 0) [B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "4"),[],[]))]) (C P True (Id "and" 0) [S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[]))])),S P (V P (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[])),(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))]))]),S P (V P (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))]))]),([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "Q" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "R" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])],fromList [])))
(Substitute [1,1],ASN (B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "3"),[],[]))]) (C P True (Id "and" 0) [S P (B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "4"),[],[]))]) (C P True (Id "and" 0) [S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[]))])),S P (V P (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[]))]))])) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))])),S P (V P (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))]))]),([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "Q" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "R" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])],fromList [])))
(UseLaw (ByMatch MEL) ";_def" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS))),((Id "Q" 0,VP),BV (VR (Id "Q" 0,VP,WS)))],fromList [("0","4")],fromList [((Id "O" 0,VO,[],[]),BL [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])])) [1,1,1],ASN (B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "3"),[],[]))]) (C P True (Id "and" 0) [S P (C P False (Id ";" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))]) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))])),S P (V P (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))]))]),([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "Q" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "R" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])],fromList [])))
(UseLaw (ByMatch MEL) ";_def" (BD (fromList [((Id "P" 0,VP),BT (C P False (Id ";" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))])),((Id "Q" 0,VP),BV (VR (Id "R" 0,VP,WS)))],fromList [("0","3")],fromList [((Id "O" 0,VO,[],[]),BL [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])])) [],ASN (C P False (Id ";" 0) [C P False (Id ";" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],V P (VR (Id "R" 0,VP,WS))],([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "Q" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "R" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])],fromList [])))
(Switch CLeft CRight,ASN (B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "2"),[],[]))]) (B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))]) (C P True (Id "and" 0) [S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))])),C P True (Id "and" 0) [S P (V P (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[])),(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))])),S P (V P (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))]))]])),([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "Q" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "R" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])],fromList [])))
(UseLaw (ByMatch MEL) "exists_swap" (BD (fromList [((Id "P" 0,VP),BT (C P True (Id "and" 0) [S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))])),C P True (Id "and" 0) [S P (V P (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[])),(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))])),S P (V P (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))]))]]))],fromList [],fromList [((Id "x" 0,VO,[],[]),BS (fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))])),((Id "y" 0,VO,[],[]),BS (fromList [GL (LV (VR (Id "O" 0,VO,WD "2"),[],[]))]))])) [],ASN (B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))]) (B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "2"),[],[]))]) (C P True (Id "and" 0) [S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))])),C P True (Id "and" 0) [S P (V P (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[])),(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))])),S P (V P (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))]))]])),([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "Q" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "R" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])],fromList [])))
(UseLaw (ByMatch MEL) "land_exists_scope" (BD (fromList [((Id "P" 0,VP),BT (S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))])))),((Id "Q" 0,VP),BT (C P True (Id "and" 0) [S P (V P (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[])),(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))])),S P (V P (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))]))]))],fromList [],fromList [((Id "x" 0,VO,[],[]),BS (fromList [GL (LV (VR (Id "O" 0,VO,WD "2"),[],[]))])),((Id "y" 0,VO,[],[]),BS (fromList []))])) [1],ASN (B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))]) (C P True (Id "and" 0) [S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))])),B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "2"),[],[]))]) (C P True (Id "and" 0) [S P (V P (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[])),(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))])),S P (V P (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))]))])]),([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "Q" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "R" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])],fromList [])))
(Substitute [1,2],ASN (B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))]) (C P True (Id "and" 0) [S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))])),S P (B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "2"),[],[]))]) (C P True (Id "and" 0) [S P (V P (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))])),S P (V P (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))]))])) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))]))]),([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "Q" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "R" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])],fromList [])))
(UseLaw (ByMatch MEL) ";_def" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "Q" 0,VP,WS))),((Id "Q" 0,VP),BV (VR (Id "R" 0,VP,WS)))],fromList [("0","2")],fromList [((Id "O" 0,VO,[],[]),BL [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])])) [1,2,1],ASN (B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))]) (C P True (Id "and" 0) [S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))])),S P (C P False (Id ";" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))]))]),([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "Q" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "R" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])],fromList [])))
(UseLaw (ByMatch MEL) ";_def" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS))),((Id "Q" 0,VP),BT (C P False (Id ";" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]))],fromList [("0","1")],fromList [((Id "O" 0,VO,[],[]),BL [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])])) [],ASN (C P False (Id ";" 0) [V P (VR (Id "P" 0,VP,WS)),C P False (Id ";" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "Q" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]),SS NU (GV (VR (Id "R" 0,VP,WS))) (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])],fromList [])))
END LIST STEPS
END LIVE-PROOF
("XYZ","asg_swap")
BEGIN LIVE-PROOF
TH-NAME: XYZ
CJ-NAME: asg_swap
CONJ = ASN (C P True (Id "eqv" 0) [C P False (Id ";" 0) [C P False (Id ":=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WB)),V (E T) (VR (Id "e" 0,VE,WB))],C P False (Id ":=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WB)),V (E T) (VR (Id "f" 0,VE,WB))]],C P False (Id ";" 0) [C P False (Id ":=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WB)),S (E T) (V (E T) (VR (Id "f" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WB),V (E T) (VR (Id "e" 0,VE,WB)))]) (fromList []))],C P False (Id ":=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WB)),V (E T) (VR (Id "e" 0,VE,WB))]]],([],fromList []))
SIDE = ([],fromList [])
STRAT red-R2L
BEGIN SEQZIP
TERMZIP = (C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WA)),S (E T) (V (E T) (VR (Id "f" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))),(VR (Id "y" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))),(VR (Id "z" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")))]) (fromList []))],C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m"))]]],[Cons' P True (Id "and" 0) [C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m")),S (E T) (V (E T) (VR (Id "e" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))),(VR (Id "y" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))),(VR (Id "z" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")))]) (fromList []))],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m")),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WB))],C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WB))]]]] [],Bnd' P (Id "exists" 0) (fromList [GV (VR (Id "x" 0,VO,WD "m")),GV (VR (Id "y" 0,VO,WD "m")),GV (VR (Id "z" 0,VO,WD "m"))])])
BEGIN SEQUENT'
SIDECOND = ([],fromList [])
LAWS' = CLaws' {hyp0 = Theory {thName = "H.asg_swap", thDeps = [], known = VD (fromList [],fromList [],fromList []), laws = [], proofs = [], auto = AutoLaws {simps = [], folds = [], unfolds = []}, conjs = []}, whichC = Rght, otherC = B P (Id "exists" 0) (fromList [GV (VR (Id "x" 0,VO,WD "m")),GV (VR (Id "y" 0,VO,WD "m")),GV (VR (Id "z" 0,VO,WD "m"))]) (C P True (Id "and" 0) [C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m")),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WB))],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m")),S (E T) (V (E T) (VR (Id "f" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WB),S (E T) (V (E T) (VR (Id "e" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))),(VR (Id "y" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))),(VR (Id "z" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")))]) (fromList []))),(VR (Id "x" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))),(VR (Id "y" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))),(VR (Id "z" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")))]) (fromList []))],C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WB))]]],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WA)),S (E T) (V (E T) (VR (Id "e" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))),(VR (Id "y" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))),(VR (Id "z" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")))]) (fromList []))],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))],C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m"))]]]])}
END SEQUENT'
END SEQZIP
FPATH: [1,2,1,2]
BEGIN LIST STEPS
(Substitute [1,2,1,2],ASN (B P (Id "exists" 0) (fromList [GV (VR (Id "x" 0,VO,WD "m")),GV (VR (Id "y" 0,VO,WD "m")),GV (VR (Id "z" 0,VO,WD "m"))]) (C P True (Id "and" 0) [C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m")),S (E T) (V (E T) (VR (Id "e" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))),(VR (Id "y" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))),(VR (Id "z" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")))]) (fromList []))],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m")),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WB))],C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WB))]]],S P (C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WB))],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WA)),V (E T) (VR (Id "f" 0,VE,WB))],C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WB))]]]) (SN (fromList [(VR (Id "x" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))),(VR (Id "y" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))),(VR (Id "z" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")))]) (fromList []))]),([],fromList [])))
(UseLaw (ByMatch MEL) "Y_:=_def" (BD (fromList [((Id "e" 0,VE),BI (Id "f" 0)),((Id "x" 0,VO),BI (Id "x" 0)),((Id "y" 0,VO),BI (Id "y" 0)),((Id "z" 0,VO),BI (Id "z" 0))],fromList [],fromList [])) [1,2,1,2,1],ASN (B P (Id "exists" 0) (fromList [GV (VR (Id "x" 0,VO,WD "m")),GV (VR (Id "y" 0,VO,WD "m")),GV (VR (Id "z" 0,VO,WD "m"))]) (C P True (Id "and" 0) [C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m")),S (E T) (V (E T) (VR (Id "e" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))),(VR (Id "y" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))),(VR (Id "z" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")))]) (fromList []))],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m")),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WB))],C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WB))]]],S P (C P False (Id ":=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WB)),V (E T) (VR (Id "f" 0,VE,WB))]) (SN (fromList [(VR (Id "x" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))),(VR (Id "y" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))),(VR (Id "z" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")))]) (fromList []))]),([],fromList [])))
(Substitute [1,2,1,1],ASN (B P (Id "exists" 0) (fromList [GV (VR (Id "x" 0,VO,WD "m")),GV (VR (Id "y" 0,VO,WD "m")),GV (VR (Id "z" 0,VO,WD "m"))]) (C P True (Id "and" 0) [S P (C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WA)),V (E T) (VR (Id "e" 0,VE,WB))],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WB))],C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WB))]]]) (SN (fromList [(VR (Id "x" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))),(VR (Id "y" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))),(VR (Id "z" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")))]) (fromList [])),S P (C P False (Id ":=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WB)),V (E T) (VR (Id "f" 0,VE,WB))]) (SN (fromList [(VR (Id "x" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))),(VR (Id "y" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))),(VR (Id "z" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")))]) (fromList []))]),([],fromList [])))
(UseLaw (ByMatch MEL) "X_:=_def" (BD (fromList [((Id "e" 0,VE),BI (Id "e" 0)),((Id "x" 0,VO),BI (Id "x" 0)),((Id "y" 0,VO),BI (Id "y" 0)),((Id "z" 0,VO),BI (Id "z" 0))],fromList [],fromList [])) [1,2,1,1,1],ASN (B P (Id "exists" 0) (fromList [GV (VR (Id "x" 0,VO,WD "m")),GV (VR (Id "y" 0,VO,WD "m")),GV (VR (Id "z" 0,VO,WD "m"))]) (C P True (Id "and" 0) [S P (C P False (Id ":=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WB)),V (E T) (VR (Id "e" 0,VE,WB))]) (SN (fromList [(VR (Id "x" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))),(VR (Id "y" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))),(VR (Id "z" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")))]) (fromList [])),S P (C P False (Id ":=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WB)),V (E T) (VR (Id "f" 0,VE,WB))]) (SN (fromList [(VR (Id "x" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))),(VR (Id "y" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))),(VR (Id "z" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")))]) (fromList []))]),([],fromList [])))
(UseLaw (ByMatch MEL) "XYZ_;_def" (BD (fromList [((Id "P" 0,VP),BT (C P False (Id ":=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WB)),V (E T) (VR (Id "e" 0,VE,WB))])),((Id "Q" 0,VP),BT (C P False (Id ":=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WB)),V (E T) (VR (Id "f" 0,VE,WB))])),((Id "x" 0,VO),BI (Id "x" 0)),((Id "y" 0,VO),BI (Id "y" 0)),((Id "z" 0,VO),BI (Id "z" 0))],fromList [("m","m")],fromList [])) [1,2],ASN (C P False (Id ";" 0) [C P False (Id ":=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WB)),V (E T) (VR (Id "e" 0,VE,WB))],C P False (Id ":=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WB)),V (E T) (VR (Id "f" 0,VE,WB))]],([],fromList [])))
(Switch CLeft CRight,ASN (B P (Id "exists" 0) (fromList [GV (VR (Id "x" 0,VO,WD "m")),GV (VR (Id "y" 0,VO,WD "m")),GV (VR (Id "z" 0,VO,WD "m"))]) (C P True (Id "and" 0) [C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m")),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WB))],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m")),S (E T) (V (E T) (VR (Id "f" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WB),S (E T) (V (E T) (VR (Id "e" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))),(VR (Id "y" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))),(VR (Id "z" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")))]) (fromList []))),(VR (Id "x" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))),(VR (Id "y" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))),(VR (Id "z" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")))]) (fromList []))],C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WB))]]],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WA)),S (E T) (V (E T) (VR (Id "e" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))),(VR (Id "y" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))),(VR (Id "z" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")))]) (fromList []))],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))],C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m"))]]]]),([],fromList [])))
(Substitute [1,2],ASN (B P (Id "exists" 0) (fromList [GV (VR (Id "x" 0,VO,WD "m")),GV (VR (Id "y" 0,VO,WD "m")),GV (VR (Id "z" 0,VO,WD "m"))]) (C P True (Id "and" 0) [C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m")),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WB))],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m")),S (E T) (V (E T) (VR (Id "f" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WB),S (E T) (V (E T) (VR (Id "e" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))),(VR (Id "y" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))),(VR (Id "z" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")))]) (fromList []))),(VR (Id "x" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))),(VR (Id "y" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))),(VR (Id "z" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")))]) (fromList []))],C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WB))]]],S P (C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WA)),V (E T) (VR (Id "e" 0,VE,WB))],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WB))],C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WB))]]]) (SN (fromList [(VR (Id "x" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))),(VR (Id "y" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))),(VR (Id "z" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")))]) (fromList []))]),([],fromList [])))
(Substitute [1,1],ASN (B P (Id "exists" 0) (fromList [GV (VR (Id "x" 0,VO,WD "m")),GV (VR (Id "y" 0,VO,WD "m")),GV (VR (Id "z" 0,VO,WD "m"))]) (C P True (Id "and" 0) [S P (C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WB))],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WA)),S (E T) (V (E T) (VR (Id "f" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WB),V (E T) (VR (Id "e" 0,VE,WB)))]) (fromList []))],C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WB))]]]) (SN (fromList [(VR (Id "x" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))),(VR (Id "y" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))),(VR (Id "z" 0,VO,WA),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")))]) (fromList [])),S P (C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WA)),V (E T) (VR (Id "e" 0,VE,WB))],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WB))],C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WB))]]]) (SN (fromList [(VR (Id "x" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WD "m"))),(VR (Id "y" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WD "m"))),(VR (Id "z" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WD "m")))]) (fromList []))]),([],fromList [])))
(UseLaw (ByMatch MEL) "XYZ_;_def" (BD (fromList [((Id "P" 0,VP),BT (C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WB))],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WA)),S (E T) (V (E T) (VR (Id "f" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WB),V (E T) (VR (Id "e" 0,VE,WB)))]) (fromList []))],C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WB))]]])),((Id "Q" 0,VP),BT (C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WA)),V (E T) (VR (Id "e" 0,VE,WB))],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WB))],C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WB))]]])),((Id "x" 0,VO),BI (Id "x" 0)),((Id "y" 0,VO),BI (Id "y" 0)),((Id "z" 0,VO),BI (Id "z" 0))],fromList [("m","m")],fromList [])) [],ASN (C P False (Id ";" 0) [C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WB))],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WA)),S (E T) (V (E T) (VR (Id "f" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WB),V (E T) (VR (Id "e" 0,VE,WB)))]) (fromList []))],C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WB))]]],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WA)),V (E T) (VR (Id "e" 0,VE,WB))],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WB))],C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WB))]]]],([],fromList [])))
(UseLaw (ByMatch MEL) "X_:=_def" (BD (fromList [((Id "e" 0,VE),BI (Id "e" 0)),((Id "x" 0,VO),BI (Id "x" 0)),((Id "y" 0,VO),BI (Id "y" 0)),((Id "z" 0,VO),BI (Id "z" 0))],fromList [],fromList [])) [2],ASN (C P False (Id ";" 0) [C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WB))],C P True (Id "and" 0) [C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WA)),S (E T) (V (E T) (VR (Id "f" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WB),V (E T) (VR (Id "e" 0,VE,WB)))]) (fromList []))],C P True (Id "=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "z" 0,VO,WB))]]],C P False (Id ":=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WB)),V (E T) (VR (Id "e" 0,VE,WB))]],([],fromList [])))
(UseLaw (ByMatch MEL) "Y_:=_def" (BD (fromList [((Id "e" 0,VE),BT (S (E T) (V (E T) (VR (Id "f" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WB),V (E T) (VR (Id "e" 0,VE,WB)))]) (fromList [])))),((Id "x" 0,VO),BI (Id "x" 0)),((Id "y" 0,VO),BI (Id "y" 0)),((Id "z" 0,VO),BI (Id "z" 0))],fromList [],fromList [])) [1],ASN (C P False (Id ";" 0) [C P False (Id ":=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "y" 0,VO,WB)),S (E T) (V (E T) (VR (Id "f" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WB),V (E T) (VR (Id "e" 0,VE,WB)))]) (fromList []))],C P False (Id ":=" 0) [V (E (TG (Id "Z" 0))) (VR (Id "x" 0,VO,WB)),V (E T) (VR (Id "e" 0,VE,WB))]],([],fromList [])))
END LIST STEPS
END LIVE-PROOF
END MAP LIVE-PROOFS
END LIVE-PROOFS
END REQSTATE
