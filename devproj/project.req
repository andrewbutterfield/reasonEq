BEGIN REQSTATE
BEGIN THEORIES
THNAMES = ["AOI","And","Arith","Closure","DWhile","Designs","EQV","Equal","Exists","Forall","Impl","LTL","Lists","Not","Or","Proto","Sets","UBase","UTCP","UWhile"]
SDAG = [[("UTCP",["Designs","UWhile","Sets","Closure","Exists","Forall","Equal","Impl","AOI","And","Or","Not","EQV"]),("DWhile",["Designs","UWhile","UBase","Closure","Exists","Forall","Equal","Impl","AOI","And","Or","Not","EQV"])],[("Designs",["UWhile","UBase","AOI","And","Or","Not","EQV"])],[("UWhile",["UBase","Closure","Exists","Forall","Equal","Impl","AOI","And","Or","Not","EQV"])],[("UBase",["Closure","Exists","Forall","Equal","Impl","AOI","And","Or","Not","EQV"])],[("Lists",["Impl","EQV","Equal","Forall","Arith","Sets"]),("LTL",["Equal","Exists","Forall","Impl","AOI","And","Or","Not","EQV"]),("Closure",["Exists","Forall","Equal","Impl","AOI","And","Or","Not","EQV"])],[("Sets",["Impl","EQV","Equal","Forall","Arith"]),("Exists",["Forall","Equal","Impl","AOI","And","Or","Not","EQV"])],[("Arith",["Impl","EQV","Equal"]),("Forall",["Equal","Impl","AOI","And","Or","Not","EQV"])],[("Equal",["Impl","EQV"])],[("Impl",["AOI","And","Or","Not","EQV"])],[("AOI",["And","Or","Not","EQV"])],[("And",["Or","Not","EQV"])],[("Or",["Not","EQV"])],[("Not",["EQV"])],[("Proto",[]),("EQV",[])]]
END THEORIES
CURRTHEORY = UWhile
BEGIN LIVE-PROOFS
BEGIN MAP LIVE-PROOFS
("UWhile","sqcmp_assoc")
BEGIN LIVE-PROOF
TH-NAME: UWhile
CJ-NAME: sqcmp_assoc
CONJ = ASN (C (TG (Id "B" 0)) True (Id "eqv" 0) [C (TG (Id "B" 0)) False (Id "sqcmp" 0) [V (TG (Id "B" 0)) (VR (Id "P" 0,VP,WS)),C (TG (Id "B" 0)) False (Id "sqcmp" 0) [V (TG (Id "B" 0)) (VR (Id "Q" 0,VP,WS)),V (TG (Id "B" 0)) (VR (Id "R" 0,VP,WS))]],C (TG (Id "B" 0)) False (Id "sqcmp" 0) [C (TG (Id "B" 0)) False (Id "sqcmp" 0) [V (TG (Id "B" 0)) (VR (Id "P" 0,VP,WS)),V (TG (Id "B" 0)) (VR (Id "Q" 0,VP,WS))],V (TG (Id "B" 0)) (VR (Id "R" 0,VP,WS))]],([VSC (GV (VR (Id "P" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),VSC (GV (VR (Id "Q" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),VSC (GV (VR (Id "R" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]))],fromList []))
SIDE = ([VSC (GV (VR (Id "P" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),VSC (GV (VR (Id "Q" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),VSC (GV (VR (Id "R" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]))],fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[])),GL (LV (VR (Id "O" 0,VO,WD "2"),[],[])),GL (LV (VR (Id "O" 0,VO,WD "3"),[],[])),GL (LV (VR (Id "O" 0,VO,WD "4"),[],[]))])
STRAT red-All
BEGIN PRFSET
MM = 30
MS = 6
BD = False
TM = False
TL = False
TS = False
FV = True
END PRFSET
BEGIN SEQZIP
TERMZIP = (B (TG (Id "B" 0)) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))]) (C (TG (Id "B" 0)) True (Id "and" 0) [S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))])),S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))]))]),[Cons' (TG (Id "B" 0)) True (Id "and" 0) [S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))]))] [],Bnd' (TG (Id "B" 0)) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "2"),[],[]))]),Cons' (TG (Id "B" 0)) True (Id "eqv" 0) [] [B (TG (Id "B" 0)) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "3"),[],[]))]) (C (TG (Id "B" 0)) True (Id "and" 0) [B (TG (Id "B" 0)) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "4"),[],[]))]) (C (TG (Id "B" 0)) True (Id "and" 0) [S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[]))])),S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[]))]))]),S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))]))])]])
BEGIN SEQUENT'
SIDECOND = ([VSC (GV (VR (Id "P" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),VSC (GV (VR (Id "Q" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),VSC (GV (VR (Id "R" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]))],fromList [])
LAWS' = CLaws' {hyp0 = Theory {thName = "H.sqcmp_assoc", thDeps = [], known = VD ("",fromList [],fromList [],fromList []), laws = [], proofs = [], auto = AutoLaws {simps = [], folds = []}, conjs = []}, whichC = Lft, otherC = K (TG (Id "B" 0)) (VB True)}
END SEQUENT'
END SEQZIP
FPATH: [1,1,2]
BEGIN LIST STEPS
(Substitute [1,1,2],ASN (C (TG (Id "B" 0)) True (Id "eqv" 0) [B (TG (Id "B" 0)) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "2"),[],[]))]) (C (TG (Id "B" 0)) True (Id "and" 0) [S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))])),S (TG (Id "B" 0)) (B (TG (Id "B" 0)) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))]) (C (TG (Id "B" 0)) True (Id "and" 0) [S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))])),S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))]))])) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))]))]),B (TG (Id "B" 0)) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "3"),[],[]))]) (C (TG (Id "B" 0)) True (Id "and" 0) [B (TG (Id "B" 0)) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "4"),[],[]))]) (C (TG (Id "B" 0)) True (Id "and" 0) [S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[]))])),S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[]))]))]),S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))]))])],([VSC (GV (VR (Id "P" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),VSC (GV (VR (Id "Q" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),VSC (GV (VR (Id "R" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]))],fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[])),GL (LV (VR (Id "O" 0,VO,WD "2"),[],[])),GL (LV (VR (Id "O" 0,VO,WD "3"),[],[])),GL (LV (VR (Id "O" 0,VO,WD "4"),[],[]))])))
(Substitute [2,1,1],ASN (C (TG (Id "B" 0)) True (Id "eqv" 0) [B (TG (Id "B" 0)) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "2"),[],[]))]) (C (TG (Id "B" 0)) True (Id "and" 0) [S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))])),S (TG (Id "B" 0)) (B (TG (Id "B" 0)) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))]) (C (TG (Id "B" 0)) True (Id "and" 0) [S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))])),S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))]))])) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))]))]),B (TG (Id "B" 0)) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "3"),[],[]))]) (C (TG (Id "B" 0)) True (Id "and" 0) [S (TG (Id "B" 0)) (B (TG (Id "B" 0)) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "4"),[],[]))]) (C (TG (Id "B" 0)) True (Id "and" 0) [S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[]))])),S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "4"),[],[]))]))])) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))])),S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))]))])],([VSC (GV (VR (Id "P" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),VSC (GV (VR (Id "Q" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),VSC (GV (VR (Id "R" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]))],fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[])),GL (LV (VR (Id "O" 0,VO,WD "2"),[],[])),GL (LV (VR (Id "O" 0,VO,WD "3"),[],[])),GL (LV (VR (Id "O" 0,VO,WD "4"),[],[]))])))
(UseLaw (ByMatch MEL) "sqcmp_def" (BD (fromList [(Id "B" 0,TG (Id "B" 0))],fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS))),((Id "Q" 0,VP),BV (VR (Id "Q" 0,VP,WS))),((Id "sqcmp" 0,VO),BV (VR (Id "sqcmp" 0,VO,WS)))],fromList [("0","4")],fromList [((Id "O" 0,VO,[],[]),BL [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])])) [2,1,1,1],ASN (C (TG (Id "B" 0)) True (Id "eqv" 0) [B (TG (Id "B" 0)) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "2"),[],[]))]) (C (TG (Id "B" 0)) True (Id "and" 0) [S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))])),S (TG (Id "B" 0)) (B (TG (Id "B" 0)) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))]) (C (TG (Id "B" 0)) True (Id "and" 0) [S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))])),S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))]))])) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))]))]),B (TG (Id "B" 0)) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "3"),[],[]))]) (C (TG (Id "B" 0)) True (Id "and" 0) [S (TG (Id "B" 0)) (C (TG (Id "B" 0)) False (Id "sqcmp" 0) [V (TG (Id "B" 0)) (VR (Id "P" 0,VP,WS)),V (TG (Id "B" 0)) (VR (Id "Q" 0,VP,WS))]) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))])),S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "3"),[],[]))]))])],([VSC (GV (VR (Id "P" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),VSC (GV (VR (Id "Q" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),VSC (GV (VR (Id "R" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]))],fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[])),GL (LV (VR (Id "O" 0,VO,WD "2"),[],[])),GL (LV (VR (Id "O" 0,VO,WD "3"),[],[]))])))
(UseLaw (ByMatch MEL) "sqcmp_def" (BD (fromList [(Id "B" 0,TG (Id "B" 0))],fromList [((Id "P" 0,VP),BT (C (TG (Id "B" 0)) False (Id "sqcmp" 0) [V (TG (Id "B" 0)) (VR (Id "P" 0,VP,WS)),V (TG (Id "B" 0)) (VR (Id "Q" 0,VP,WS))])),((Id "Q" 0,VP),BV (VR (Id "R" 0,VP,WS))),((Id "sqcmp" 0,VO),BV (VR (Id "sqcmp" 0,VO,WS)))],fromList [("0","3")],fromList [((Id "O" 0,VO,[],[]),BL [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])])) [2],ASN (C (TG (Id "B" 0)) True (Id "eqv" 0) [B (TG (Id "B" 0)) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "2"),[],[]))]) (C (TG (Id "B" 0)) True (Id "and" 0) [S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))])),S (TG (Id "B" 0)) (B (TG (Id "B" 0)) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))]) (C (TG (Id "B" 0)) True (Id "and" 0) [S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))])),S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))]))])) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "2"),[],[]))]))]),C (TG (Id "B" 0)) False (Id "sqcmp" 0) [C (TG (Id "B" 0)) False (Id "sqcmp" 0) [V (TG (Id "B" 0)) (VR (Id "P" 0,VP,WS)),V (TG (Id "B" 0)) (VR (Id "Q" 0,VP,WS))],V (TG (Id "B" 0)) (VR (Id "R" 0,VP,WS))]],([VSC (GV (VR (Id "P" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),VSC (GV (VR (Id "Q" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),VSC (GV (VR (Id "R" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]))],fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[])),GL (LV (VR (Id "O" 0,VO,WD "2"),[],[]))])))
(UseLaw (ByMatch MEL) "sqcmp_def" (BD (fromList [(Id "B" 0,TG (Id "B" 0))],fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS))),((Id "Q" 0,VP),BT (B (TG (Id "B" 0)) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))]) (C (TG (Id "B" 0)) True (Id "and" 0) [S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))])),S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))]))]))),((Id "sqcmp" 0,VO),BV (VR (Id "sqcmp" 0,VO,WS)))],fromList [("0","2")],fromList [((Id "O" 0,VO,[],[]),BL [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])])) [1],ASN (C (TG (Id "B" 0)) True (Id "eqv" 0) [C (TG (Id "B" 0)) False (Id "sqcmp" 0) [V (TG (Id "B" 0)) (VR (Id "P" 0,VP,WS)),B (TG (Id "B" 0)) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))]) (C (TG (Id "B" 0)) True (Id "and" 0) [S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))])),S (TG (Id "B" 0)) (V (TG (Id "B" 0)) (VR (Id "R" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))]))])],C (TG (Id "B" 0)) False (Id "sqcmp" 0) [C (TG (Id "B" 0)) False (Id "sqcmp" 0) [V (TG (Id "B" 0)) (VR (Id "P" 0,VP,WS)),V (TG (Id "B" 0)) (VR (Id "Q" 0,VP,WS))],V (TG (Id "B" 0)) (VR (Id "R" 0,VP,WS))]],([VSC (GV (VR (Id "P" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),VSC (GV (VR (Id "Q" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),VSC (GV (VR (Id "R" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]))],fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))])))
(UseLaw (ByMatch MEL) "sqcmp_def" (BD (fromList [(Id "B" 0,TG (Id "B" 0))],fromList [((Id "P" 0,VP),BV (VR (Id "Q" 0,VP,WS))),((Id "Q" 0,VP),BV (VR (Id "R" 0,VP,WS))),((Id "sqcmp" 0,VO),BV (VR (Id "sqcmp" 0,VO,WS)))],fromList [("0","1")],fromList [((Id "O" 0,VO,[],[]),BL [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])])) [1,2],ASN (C (TG (Id "B" 0)) True (Id "eqv" 0) [C (TG (Id "B" 0)) False (Id "sqcmp" 0) [V (TG (Id "B" 0)) (VR (Id "P" 0,VP,WS)),C (TG (Id "B" 0)) False (Id "sqcmp" 0) [V (TG (Id "B" 0)) (VR (Id "Q" 0,VP,WS)),V (TG (Id "B" 0)) (VR (Id "R" 0,VP,WS))]],C (TG (Id "B" 0)) False (Id "sqcmp" 0) [C (TG (Id "B" 0)) False (Id "sqcmp" 0) [V (TG (Id "B" 0)) (VR (Id "P" 0,VP,WS)),V (TG (Id "B" 0)) (VR (Id "Q" 0,VP,WS))],V (TG (Id "B" 0)) (VR (Id "R" 0,VP,WS))]],([VSC (GV (VR (Id "P" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),VSC (GV (VR (Id "Q" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),VSC (GV (VR (Id "R" 0,VP,WS))) NA NA (The (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]))],fromList [])))
END LIST STEPS
END LIVE-PROOF
END MAP LIVE-PROOFS
END LIVE-PROOFS
END REQSTATE
