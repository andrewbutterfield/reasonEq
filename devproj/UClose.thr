BEGIN THEORY UClose
DEPS = ["Exists","ForAll","Equality","Implies","AndOrInvert","And","Or","Not","Equiv"]
KNOWN = VD (fromList [],fromList [],fromList [])
BEGIN LIST LAWS
(("[]_def",ASN (C P True (Id "eqv" 0) [X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS)))],([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])],fromList []))),Axiom)
(("sat_def",ASN (C P True (Id "eqv" 0) [X (Id "langle_rangle" 0) (V P (VR (Id "P" 0,VP,WS))),C P True (Id "not" 0) [X (Id "[_]" 0) (C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))])]],([],fromList []))),Axiom)
(("univ_inst",ASN (C P True (Id "imp" 0) [X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),V P (VR (Id "P" 0,VP,WS))],([],fromList []))),Proven "univ_inst")
END LIST LAWS
BEGIN LIST PROOFS
("univ_inst",ASN (C P True (Id "imp" 0) [X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),V P (VR (Id "P" 0,VP,WS))],([],fromList [])),"red-All",(K P (VB True),[(UseLaw (ByMatch MEL) "[]_def" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS)))],fromList [],fromList [((Id "x" 0,VO,[],[]),BL [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])])) [1],ASN (C P True (Id "imp" 0) [X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),V P (VR (Id "P" 0,VP,WS))],([],fromList []))),(UseLaw (ByMatch MIA) "forall_inst" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS)))],fromList [],fromList [((Id "e" 0,VE,[],[]),BL [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]),((Id "x" 0,VO,[],[]),BS (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])),((Id "y" 0,VO,[],[]),BS (fromList []))])) [1],ASN (C P True (Id "imp" 0) [B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS))),V P (VR (Id "P" 0,VP,WS))],([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])],fromList []))),(Substitute [1,2],ASN (C P True (Id "imp" 0) [C P True (Id "and" 0) [B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS))),S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList []))],V P (VR (Id "P" 0,VP,WS))],([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])],fromList []))),(UseLaw (ByMatch MEL) "shunting" (BD (fromList [((Id "P" 0,VP),BT (B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS))))),((Id "Q" 0,VP),BV (VR (Id "P" 0,VP,WS))),((Id "R" 0,VP),BV (VR (Id "P" 0,VP,WS)))],fromList [],fromList [])) [],ASN (C P True (Id "imp" 0) [C P True (Id "and" 0) [B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS))),V P (VR (Id "P" 0,VP,WS))],V P (VR (Id "P" 0,VP,WS))],([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])],fromList []))),(UseLaw (ByMatch MEL) "implies_refl" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS)))],fromList [],fromList [])) [2],ASN (C P True (Id "imp" 0) [B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS))),C P True (Id "imp" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "P" 0,VP,WS))]],([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])],fromList []))),(UseLaw (ByMatch MEL) "implies_r-zero" (BD (fromList [((Id "P" 0,VP),BT (B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS)))))],fromList [],fromList [])) [],ASN (C P True (Id "imp" 0) [B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS))),K P (VB True)],([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])],fromList [])))]))
END LIST PROOFS
BEGIN LIST SIMPLIFIERS
END LIST SIMPLIFIERS
BEGIN LIST DEFFOLD
END LIST DEFFOLD
BEGIN LIST DEFUNFOLD
END LIST DEFUNFOLD
BEGIN LIST CONJECTURES
("univ_id_on_closed",ASN (C P True (Id "eqv" 0) [X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),V P (VR (Id "P" 0,VP,WS))],([SS NU (GV (VR (Id "P" 0,VP,WS))) (fromList [])],fromList [])))
("univ_true",ASN (C P True (Id "eqv" 0) [X (Id "[_]" 0) (K P (VB True)),K P (VB True)],([],fromList [])))
("univ_False",ASN (C P True (Id "eqv" 0) [X (Id "[_]" 0) (K P (VB False)),K P (VB False)],([],fromList [])))
("[]_idem",ASN (C P True (Id "eqv" 0) [X (Id "[_]" 0) (X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))),X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))],([],fromList [])))
("land_[]_distr",ASN (C P True (Id "eqv" 0) [C P True (Id "and" 0) [X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),X (Id "[_]" 0) (V P (VR (Id "Q" 0,VP,WS)))],X (Id "[_]" 0) (C P True (Id "and" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))])],([],fromList [])))
("univ_forall_closed",ASN (C P True (Id "eqv" 0) [B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))),X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))],([],fromList [])))
("univ_exists_closed",ASN (C P True (Id "eqv" 0) [B P (Id "exists" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))),X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))],([],fromList [])))
("univ_inst_gen",ASN (C P True (Id "imp" 0) [X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "x" 0,VO,WS),[],[]),LV (VR (Id "e" 0,VO,WS),[],[]))]))],([],fromList [])))
("univ_mono",ASN (C P True (Id "imp" 0) [X (Id "[_]" 0) (C P True (Id "imp" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))]),C P True (Id "imp" 0) [X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),X (Id "[_]" 0) (V P (VR (Id "Q" 0,VP,WS)))]],([],fromList [])))
("necessary_poss",ASN (C P True (Id "imp" 0) [X (Id "langle_rangle" 0) (V P (VR (Id "P" 0,VP,WS))),X (Id "[_]" 0) (X (Id "langle_rangle" 0) (V P (VR (Id "P" 0,VP,WS))))],([],fromList [])))
END LIST CONJECTURES
END THEORY UClose
