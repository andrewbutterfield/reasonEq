BEGIN THEORY Not
DEPS = ["Equiv"]
KNOWN = VD (fromList [(VR (Id "not" 0,VP,WS),KV (TF (TG (Id "B" 0)) (TG (Id "B" 0))))],fromList [],fromList [])
BEGIN LIST LAWS
(("false_def",ASN (C P True (Id "eqv" 0) [K P (VB False),C P True (Id "not" 0) [K P (VB True)]],([],fromList []))),Axiom)
(("lnot_equiv_distr",ASN (C P True (Id "eqv" 0) [C P True (Id "not" 0) [C P True (Id "eqv" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))]],C P True (Id "eqv" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))],V P (VR (Id "Q" 0,VP,WS))]],([],fromList []))),Axiom)
(("lnot_equiv_swap",ASN (C P True (Id "eqv" 0) [C P True (Id "eqv" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))],V P (VR (Id "Q" 0,VP,WS))],C P True (Id "eqv" 0) [V P (VR (Id "P" 0,VP,WS)),C P True (Id "not" 0) [V P (VR (Id "Q" 0,VP,WS))]]],([],fromList []))),Proven "lnot_equiv_swap")
(("lnot_def",ASN (C P True (Id "eqv" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))],C P True (Id "eqv" 0) [V P (VR (Id "P" 0,VP,WS)),K P (VB False)]],([],fromList []))),Proven "lnot_def")
(("lnot_invol",ASN (C P True (Id "eqv" 0) [C P True (Id "not" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))]],V P (VR (Id "P" 0,VP,WS))],([],fromList []))),Proven "lnot_invol")
(("false_neg",ASN (C P True (Id "eqv" 0) [C P True (Id "not" 0) [K P (VB False)],K P (VB True)],([],fromList []))),Proven "false_neg")
(("false_subst",ASN (C P True (Id "eqv" 0) [S P (K P (VB False)) (SN (fromList []) (fromList [(LV (VR (Id "x" 0,VO,WS),[],[]),LV (VR (Id "e" 0,VE,WS),[],[]))])),K P (VB False)],([],fromList []))),Proven "false_subst")
(("lnot_subst",ASN (C P True (Id "eqv" 0) [S P (C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))]) (SN (fromList []) (fromList [(LV (VR (Id "x" 0,VO,WS),[],[]),LV (VR (Id "e" 0,VE,WS),[],[]))])),C P True (Id "not" 0) [S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "x" 0,VO,WS),[],[]),LV (VR (Id "e" 0,VE,WS),[],[]))]))]],([],fromList []))),Proven "lnot_subst")
END LIST LAWS
BEGIN LIST PROOFS
("lnot_subst",ASN (C P True (Id "eqv" 0) [S P (C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))]) (SN (fromList []) (fromList [(LV (VR (Id "x" 0,VO,WS),[],[]),LV (VR (Id "e" 0,VE,WS),[],[]))])),C P True (Id "not" 0) [S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "x" 0,VO,WS),[],[]),LV (VR (Id "e" 0,VE,WS),[],[]))]))]],([],fromList [])),"red-L2R",(C P True (Id "not" 0) [S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "x" 0,VO,WS),[],[]),LV (VR (Id "e" 0,VE,WS),[],[]))]))],[(Substitute [],ASN (S P (C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))]) (SN (fromList []) (fromList [(LV (VR (Id "x" 0,VO,WS),[],[]),LV (VR (Id "e" 0,VE,WS),[],[]))])),([],fromList [])))]))
("false_subst",ASN (C P True (Id "eqv" 0) [S P (K P (VB False)) (SN (fromList []) (fromList [(LV (VR (Id "x" 0,VO,WS),[],[]),LV (VR (Id "e" 0,VE,WS),[],[]))])),K P (VB False)],([],fromList [])),"red-L2R",(K P (VB False),[(Substitute [],ASN (S P (K P (VB False)) (SN (fromList []) (fromList [(LV (VR (Id "x" 0,VO,WS),[],[]),LV (VR (Id "e" 0,VE,WS),[],[]))])),([],fromList [])))]))
("false_neg",ASN (C P True (Id "eqv" 0) [C P True (Id "not" 0) [K P (VB False)],K P (VB True)],([],fromList [])),"red-L2R",(K P (VB True),[(UseLaw (ByMatch MEL) "false_def" (BD (fromList [],fromList [],fromList [])) [1],ASN (C P True (Id "not" 0) [K P (VB False)],([],fromList []))),(UseLaw (ByMatch MEL) "lnot_invol" (BD (fromList [((Id "P" 0,VP),BT (K P (VB True)))],fromList [],fromList [])) [],ASN (C P True (Id "not" 0) [C P True (Id "not" 0) [K P (VB True)]],([],fromList [])))]))
("lnot_invol",ASN (C P True (Id "eqv" 0) [C P True (Id "not" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))]],V P (VR (Id "P" 0,VP,WS))],([],fromList [])),"red-All",(K P (VB True),[(UseLaw (ByMatch MEL) "lnot_equiv_swap" (BD (fromList [((Id "P" 0,VP),BT (C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))])),((Id "Q" 0,VP),BV (VR (Id "P" 0,VP,WS)))],fromList [],fromList [])) [],ASN (C P True (Id "eqv" 0) [C P True (Id "not" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))]],V P (VR (Id "P" 0,VP,WS))],([],fromList []))),(UseLaw (ByMatch MA) "equiv_refl" (BD (fromList [((Id "P" 0,VP),BT (C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))]))],fromList [],fromList [])) [],ASN (C P True (Id "eqv" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))],C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))]],([],fromList [])))]))
("lnot_def",ASN (C P True (Id "eqv" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))],C P True (Id "eqv" 0) [V P (VR (Id "P" 0,VP,WS)),K P (VB False)]],([],fromList [])),"red-All",(K P (VB True),[(UseLaw (ByMatch MEL) "false_def" (BD (fromList [],fromList [],fromList [])) [2,2],ASN (C P True (Id "eqv" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))],C P True (Id "eqv" 0) [V P (VR (Id "P" 0,VP,WS)),K P (VB False)]],([],fromList []))),(UseLaw (ByMatch MER) "lnot_equiv_swap" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS))),((Id "Q" 0,VP),BT (K P (VB True)))],fromList [],fromList [])) [2],ASN (C P True (Id "eqv" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))],C P True (Id "eqv" 0) [V P (VR (Id "P" 0,VP,WS)),C P True (Id "not" 0) [K P (VB True)]]],([],fromList []))),(UseLaw (ByMatch (ME [1,2])) "equiv_symm" (BD (fromList [((Id "P" 0,VP),BT (C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))])),((Id "Q" 0,VP),BT (C P True (Id "eqv" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))],K P (VB True)]))],fromList [],fromList [])) [],ASN (C P True (Id "eqv" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))],C P True (Id "eqv" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))],K P (VB True)]],([],fromList []))),(UseLaw (ByMatch (ME [1,2])) "equiv_symm" (BD (fromList [((Id "P" 0,VP),BT (C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))])),((Id "Q" 0,VP),BT (K P (VB True)))],fromList [],fromList [])) [1],ASN (C P True (Id "eqv" 0) [C P True (Id "eqv" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))],K P (VB True)],C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))]],([],fromList []))),(UseLaw (ByMatch MA) "equiv_id" (BD (fromList [((Id "Q" 0,VP),BT (C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))]))],fromList [],fromList [])) [],ASN (C P True (Id "eqv" 0) [C P True (Id "eqv" 0) [K P (VB True),C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))]],C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))]],([],fromList [])))]))
("lnot_equiv_swap",ASN (C P True (Id "eqv" 0) [C P True (Id "eqv" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))],V P (VR (Id "Q" 0,VP,WS))],C P True (Id "eqv" 0) [V P (VR (Id "P" 0,VP,WS)),C P True (Id "not" 0) [V P (VR (Id "Q" 0,VP,WS))]]],([],fromList [])),"red-All",(K P (VB True),[(UseLaw (ByMatch MER) "lnot_equiv_distr" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS))),((Id "Q" 0,VP),BV (VR (Id "Q" 0,VP,WS)))],fromList [],fromList [])) [1],ASN (C P True (Id "eqv" 0) [C P True (Id "eqv" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))],V P (VR (Id "Q" 0,VP,WS))],C P True (Id "eqv" 0) [V P (VR (Id "P" 0,VP,WS)),C P True (Id "not" 0) [V P (VR (Id "Q" 0,VP,WS))]]],([],fromList []))),(UseLaw (ByMatch (ME [1,2])) "equiv_symm" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS))),((Id "Q" 0,VP),BT (C P True (Id "not" 0) [V P (VR (Id "Q" 0,VP,WS))]))],fromList [],fromList [])) [2],ASN (C P True (Id "eqv" 0) [C P True (Id "not" 0) [C P True (Id "eqv" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))]],C P True (Id "eqv" 0) [V P (VR (Id "P" 0,VP,WS)),C P True (Id "not" 0) [V P (VR (Id "Q" 0,VP,WS))]]],([],fromList []))),(UseLaw (ByMatch MER) "lnot_equiv_distr" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "Q" 0,VP,WS))),((Id "Q" 0,VP),BV (VR (Id "P" 0,VP,WS)))],fromList [],fromList [])) [2],ASN (C P True (Id "eqv" 0) [C P True (Id "not" 0) [C P True (Id "eqv" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))]],C P True (Id "eqv" 0) [C P True (Id "not" 0) [V P (VR (Id "Q" 0,VP,WS))],V P (VR (Id "P" 0,VP,WS))]],([],fromList []))),(UseLaw (ByMatch (ME [1,2])) "equiv_symm" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "Q" 0,VP,WS))),((Id "Q" 0,VP),BV (VR (Id "P" 0,VP,WS)))],fromList [],fromList [])) [2,1],ASN (C P True (Id "eqv" 0) [C P True (Id "not" 0) [C P True (Id "eqv" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))]],C P True (Id "not" 0) [C P True (Id "eqv" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "P" 0,VP,WS))]]],([],fromList []))),(UseLaw (ByMatch MA) "equiv_refl" (BD (fromList [((Id "P" 0,VP),BT (C P True (Id "not" 0) [C P True (Id "eqv" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))]]))],fromList [],fromList [])) [],ASN (C P True (Id "eqv" 0) [C P True (Id "not" 0) [C P True (Id "eqv" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))]],C P True (Id "not" 0) [C P True (Id "eqv" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))]]],([],fromList [])))]))
("lnot_def",ASN (C P True (Id "eqv" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))],C P True (Id "eqv" 0) [V P (VR (Id "P" 0,VP,WS)),K P (VB False)]],([],fromList [])),"red-All",(K P (VB True),[(UseLaw (ByMatch MEL) "false_def" (BD (fromList [],fromList [],fromList [])) [2,2],ASN (C P True (Id "eqv" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))],C P True (Id "eqv" 0) [V P (VR (Id "P" 0,VP,WS)),K P (VB False)]],([],fromList []))),(UseLaw (ByMatch MER) "lnot_equiv_swap" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS))),((Id "Q" 0,VP),BT (K P (VB True)))],fromList [],fromList [])) [2],ASN (C P True (Id "eqv" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))],C P True (Id "eqv" 0) [V P (VR (Id "P" 0,VP,WS)),C P True (Id "not" 0) [K P (VB True)]]],([],fromList []))),(UseLaw (ByMatch MER) "equiv_assoc" (BD (fromList [((Id "P" 0,VP),BT (C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))])),((Id "Q" 0,VP),BT (C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))])),((Id "R" 0,VP),BT (K P (VB True)))],fromList [],fromList [])) [],ASN (C P True (Id "eqv" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))],C P True (Id "eqv" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))],K P (VB True)]],([],fromList []))),(UseLaw (ByMatch MA) "equiv_refl" (BD (fromList [((Id "P" 0,VP),BT (C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))]))],fromList [],fromList [])) [1],ASN (C P True (Id "eqv" 0) [C P True (Id "eqv" 0) [C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))],C P True (Id "not" 0) [V P (VR (Id "P" 0,VP,WS))]],K P (VB True)],([],fromList []))),(UseLaw (ByMatch MEL) "equiv_id" (BD (fromList [((Id "Q" 0,VP),BT (K P (VB True)))],fromList [],fromList [])) [],ASN (C P True (Id "eqv" 0) [K P (VB True),K P (VB True)],([],fromList [])))]))
END LIST PROOFS
BEGIN LIST SIMPLIFIERS
END LIST SIMPLIFIERS
BEGIN LIST DEFFOLD
END LIST DEFFOLD
BEGIN LIST DEFUNFOLD
END LIST DEFUNFOLD
BEGIN LIST CONJECTURES
END LIST CONJECTURES
END THEORY Not
