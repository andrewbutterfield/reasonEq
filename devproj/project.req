BEGIN REQSTATE
BEGIN THEORIES
THNAMES = ["And","AndOrInvert","Arithmetic","Equality","Equiv","Exists","ForAll","Implies","LTL","Lists","Not","Or","Sets","UClose","UTCP","UTPBase"]
SDAG = [[("UTCP",["UTPBase","UClose","Exists","ForAll","Equality","Implies","AndOrInvert","And","Or","Not","Equiv"])],[("UTPBase",["UClose","Exists","ForAll","Equality","Implies","AndOrInvert","And","Or","Not","Equiv"])],[("Lists",["Implies","Equiv","Equality","ForAll","Arithmetic","Sets"]),("LTL",["Equality","Exists","ForAll","Implies","AndOrInvert","And","Or","Not","Equiv"]),("UClose",["Exists","ForAll","Equality","Implies","AndOrInvert","And","Or","Not","Equiv"])],[("Sets",["Implies","Equiv","Equality","ForAll","Arithmetic"]),("Exists",["ForAll","Equality","Implies","AndOrInvert","And","Or","Not","Equiv"])],[("Arithmetic",["Implies","Equiv","Equality"]),("ForAll",["Equality","Implies","AndOrInvert","And","Or","Not","Equiv"])],[("Equality",["Implies","Equiv"])],[("Implies",["AndOrInvert","And","Or","Not","Equiv"])],[("AndOrInvert",["And","Or","Not","Equiv"])],[("And",["Or","Not","Equiv"])],[("Or",["Not","Equiv"])],[("Not",["Equiv"])],[("Equiv",[])]]
END THEORIES
CURRTHEORY = UTCP
BEGIN LIVE-PROOFS
BEGIN MAP LIVE-PROOFS
("UTCP","X_X_comp")
BEGIN LIVE-PROOF
TH-NAME: UTCP
CJ-NAME: X_X_comp
CONJ = ASN (C (TF TB (TG (Id "B" 0))) True (Id "eqv" 0) [C (TF TB (TG (Id "B" 0))) False (Id ";" 0) [C (TF TB (TG (Id "B" 0))) False (Id "X" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E1" 0,VE,WS)),V (TF TB (TG (Id "B" 0))) (VR (Id "a" 0,VP,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R1" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N1" 0,VE,WS))],C (TF TB (TG (Id "B" 0))) False (Id "X" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E2" 0,VE,WS)),V (TF TB (TG (Id "B" 0))) (VR (Id "b" 0,VP,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R2" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N2" 0,VE,WS))]],C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "union" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E2" 0,VE,WS)),C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "\\" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R1" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N1" 0,VE,WS))]],V (TC (Id "P" 0) [TV (Id "t" 0)]) (VR (Id "emptyset" 0,VO,WS))],C (TF TB (TG (Id "B" 0))) False (Id "X" 0) [C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "union" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E1" 0,VE,WS)),C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "\\" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E2" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N1" 0,VE,WS))]],C (TF TB (TG (Id "B" 0))) False (Id ";" 0) [V (TF TB (TG (Id "B" 0))) (VR (Id "a" 0,VP,WS)),V (TF TB (TG (Id "B" 0))) (VR (Id "b" 0,VP,WS))],C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "union" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R1" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R2" 0,VE,WS))],C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "union" 0) [C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "\\" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N1" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R2" 0,VE,WS))],V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N2" 0,VE,WS))]]]],([TVSC (GV (VR (Id "b" 0,VP,WS))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),TVSC (GV (VR (Id "a" 0,VP,WS))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]))],fromList []))
SIDE = ([TVSC (GV (VR (Id "b" 0,VP,WS))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),TVSC (GV (VR (Id "a" 0,VP,WS))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]))],fromList [])
STRAT red-L2R
BEGIN SEQZIP
TERMZIP = (S (TG (Id "B" 0)) (C (TG (Id "B" 0)) False (Id "subseteq" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E1" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB))]) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))])),[Cons' (TF TB (TG (Id "B" 0))) True (Id "and" 0) [] [S (TF TB (TG (Id "B" 0))) (V (TF TB (TG (Id "B" 0))) (VR (Id "a" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))]))],Cons' (TF TB (TG (Id "B" 0))) True (Id "and" 0) [] [C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WA)),S (TC (Id "P" 0) [TV (Id "t" 0)]) (C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "union" 0) [C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "\\" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R1" 0,VE,WS))],V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N1" 0,VE,WS))]) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))]))]],Cons' (TF TB (TG (Id "B" 0))) True (Id "and" 0) [] [S (TF TB (TG (Id "B" 0))) (C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TG (Id "B" 0)) False (Id "subseteq" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E2" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB))],V (TF TB (TG (Id "B" 0))) (VR (Id "b" 0,VP,WS))],C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WA)),C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "union" 0) [C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "\\" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R2" 0,VE,WS))],V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N2" 0,VE,WS))]]]) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))]))],Bnd' (TF TB (TG (Id "B" 0))) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))])])
BEGIN SEQUENT'
SIDECOND = ([TVSC (GV (VR (Id "b" 0,VP,WS))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),TVSC (GV (VR (Id "a" 0,VP,WS))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]))],fromList [])
LAWS' = CLaws' {hyp0 = Theory {thName = "H.X_X_comp", thDeps = [], known = VD ("",fromList [],fromList [],fromList []), laws = [], proofs = [], auto = AutoLaws {simps = [], folds = [], unfolds = []}, conjs = []}, whichC = Lft, otherC = C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "union" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E2" 0,VE,WS)),C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "\\" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R1" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N1" 0,VE,WS))]],V (TC (Id "P" 0) [TV (Id "t" 0)]) (VR (Id "emptyset" 0,VO,WS))],C (TF TB (TG (Id "B" 0))) False (Id "X" 0) [C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "union" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E1" 0,VE,WS)),C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "\\" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E2" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N1" 0,VE,WS))]],C (TF TB (TG (Id "B" 0))) False (Id ";" 0) [V (TF TB (TG (Id "B" 0))) (VR (Id "a" 0,VP,WS)),V (TF TB (TG (Id "B" 0))) (VR (Id "b" 0,VP,WS))],C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "union" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R1" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R2" 0,VE,WS))],C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "union" 0) [C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "\\" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N1" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R2" 0,VE,WS))],V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N2" 0,VE,WS))]]]}
END SEQUENT'
END SEQZIP
FPATH: [1,1,1,1]
BEGIN LIST STEPS
(Substitute [1,1,1,1],ASN (B (TF TB (TG (Id "B" 0))) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))]) (C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [S (TG (Id "B" 0)) (C (TG (Id "B" 0)) False (Id "subseteq" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E1" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB))]) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))])),S (TF TB (TG (Id "B" 0))) (V (TF TB (TG (Id "B" 0))) (VR (Id "a" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))]))],C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WA)),S (TC (Id "P" 0) [TV (Id "t" 0)]) (C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "union" 0) [C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "\\" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R1" 0,VE,WS))],V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N1" 0,VE,WS))]) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))]))]],S (TF TB (TG (Id "B" 0))) (C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TG (Id "B" 0)) False (Id "subseteq" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E2" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB))],V (TF TB (TG (Id "B" 0))) (VR (Id "b" 0,VP,WS))],C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WA)),C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "union" 0) [C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "\\" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R2" 0,VE,WS))],V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N2" 0,VE,WS))]]]) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))]))]),([TVSC (GV (VR (Id "b" 0,VP,WS))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),TVSC (GV (VR (Id "a" 0,VP,WS))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]))],fromList [])))
(Substitute [1,1],ASN (B (TF TB (TG (Id "B" 0))) (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "1"),[],[]))]) (C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [S (TF TB (TG (Id "B" 0))) (C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TG (Id "B" 0)) False (Id "subseteq" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E1" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB))],V (TF TB (TG (Id "B" 0))) (VR (Id "a" 0,VP,WS))],C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WA)),C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "union" 0) [C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "\\" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R1" 0,VE,WS))],V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N1" 0,VE,WS))]]]) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))])),S (TF TB (TG (Id "B" 0))) (C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TG (Id "B" 0)) False (Id "subseteq" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E2" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB))],V (TF TB (TG (Id "B" 0))) (VR (Id "b" 0,VP,WS))],C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WA)),C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "union" 0) [C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "\\" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R2" 0,VE,WS))],V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N2" 0,VE,WS))]]]) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "1"),[],[]))]))]),([TVSC (GV (VR (Id "b" 0,VP,WS))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),TVSC (GV (VR (Id "a" 0,VP,WS))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]))],fromList [])))
(UseLaw (ByMatch MEL) ";_def" (BD (fromList [((Id ";" 0,VO),BV (VR (Id ";" 0,VO,WS))),((Id "P" 0,VP),BT (C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TG (Id "B" 0)) False (Id "subseteq" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E1" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB))],V (TF TB (TG (Id "B" 0))) (VR (Id "a" 0,VP,WS))],C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WA)),C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "union" 0) [C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "\\" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R1" 0,VE,WS))],V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N1" 0,VE,WS))]]])),((Id "Q" 0,VP),BT (C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TG (Id "B" 0)) False (Id "subseteq" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E2" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB))],V (TF TB (TG (Id "B" 0))) (VR (Id "b" 0,VP,WS))],C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WA)),C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "union" 0) [C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "\\" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R2" 0,VE,WS))],V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N2" 0,VE,WS))]]]))],fromList [("0","1")],fromList [((Id "O" 0,VO,[],[]),BL [GL (LV (VR (Id "O" 0,VO,WB),[],[]))])])) [],ASN (C (TF TB (TG (Id "B" 0))) False (Id ";" 0) [C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TG (Id "B" 0)) False (Id "subseteq" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E1" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB))],V (TF TB (TG (Id "B" 0))) (VR (Id "a" 0,VP,WS))],C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WA)),C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "union" 0) [C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "\\" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R1" 0,VE,WS))],V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N1" 0,VE,WS))]]],C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TG (Id "B" 0)) False (Id "subseteq" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E2" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB))],V (TF TB (TG (Id "B" 0))) (VR (Id "b" 0,VP,WS))],C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WA)),C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "union" 0) [C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "\\" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R2" 0,VE,WS))],V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N2" 0,VE,WS))]]]],([TVSC (GV (VR (Id "b" 0,VP,WS))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),TVSC (GV (VR (Id "a" 0,VP,WS))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]))],fromList [])))
(UseLaw (ByMatch MEL) "X_def" (BD (fromList [((Id "E" 0,VE),BV (VR (Id "E2" 0,VE,WS))),((Id "N" 0,VE),BV (VR (Id "N2" 0,VE,WS))),((Id "R" 0,VE),BV (VR (Id "R2" 0,VE,WS))),((Id "X" 0,VO),BV (VR (Id "X" 0,VO,WS))),((Id "a" 0,VP),BV (VR (Id "b" 0,VP,WS))),((Id "ls" 0,VO),BI (Id "ls" 0))],fromList [],fromList [])) [2],ASN (C (TF TB (TG (Id "B" 0))) False (Id ";" 0) [C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TF TB (TG (Id "B" 0))) True (Id "and" 0) [C (TG (Id "B" 0)) False (Id "subseteq" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E1" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB))],V (TF TB (TG (Id "B" 0))) (VR (Id "a" 0,VP,WS))],C (TF TB (TG (Id "B" 0))) True (Id "=" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WA)),C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "union" 0) [C (TC (Id "P" 0) [TV (Id "t" 0)]) False (Id "\\" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "ls" 0,VO,WB)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R1" 0,VE,WS))],V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N1" 0,VE,WS))]]],C (TF TB (TG (Id "B" 0))) False (Id "X" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E2" 0,VE,WS)),V (TF TB (TG (Id "B" 0))) (VR (Id "b" 0,VP,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R2" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N2" 0,VE,WS))]],([TVSC (GV (VR (Id "b" 0,VP,WS))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),TVSC (GV (VR (Id "a" 0,VP,WS))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]))],fromList [])))
(UseLaw (ByMatch MEL) "X_def" (BD (fromList [((Id "E" 0,VE),BV (VR (Id "E1" 0,VE,WS))),((Id "N" 0,VE),BV (VR (Id "N1" 0,VE,WS))),((Id "R" 0,VE),BV (VR (Id "R1" 0,VE,WS))),((Id "X" 0,VO),BV (VR (Id "X" 0,VO,WS))),((Id "a" 0,VP),BV (VR (Id "a" 0,VP,WS))),((Id "ls" 0,VO),BI (Id "ls" 0))],fromList [],fromList [])) [1],ASN (C (TF TB (TG (Id "B" 0))) False (Id ";" 0) [C (TF TB (TG (Id "B" 0))) False (Id "X" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E1" 0,VE,WS)),V (TF TB (TG (Id "B" 0))) (VR (Id "a" 0,VP,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R1" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N1" 0,VE,WS))],C (TF TB (TG (Id "B" 0))) False (Id "X" 0) [V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "E2" 0,VE,WS)),V (TF TB (TG (Id "B" 0))) (VR (Id "b" 0,VP,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "R2" 0,VE,WS)),V (TC (Id "P" 0) [TG (Id "LE" 0)]) (VR (Id "N2" 0,VE,WS))]],([TVSC (GV (VR (Id "b" 0,VP,WS))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))])),TVSC (GV (VR (Id "a" 0,VP,WS))) (fromList []) Nothing (Just (fromList [GL (LV (VR (Id "O" 0,VO,WB),[],[])),GL (LV (VR (Id "O" 0,VO,WA),[],[]))]))],fromList [])))
END LIST STEPS
END LIVE-PROOF
END MAP LIVE-PROOFS
END LIVE-PROOFS
END REQSTATE
